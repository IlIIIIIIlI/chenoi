Traceback (most recent call last):
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 730, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\util.py", line 96, in ensure_async
    result = await obj
  File "C:\Users\19723\anaconda3\lib\site-packages\jupyter_client\channels.py", line 230, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\19723\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\19723\anaconda3\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 949, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 754, in _async_poll_for_reply
    await self._async_handle_timeout(timeout, cell)
  File "C:\Users\19723\anaconda3\lib\site-packages\nbclient\client.py", line 801, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 10 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
['from tqdm import tqdm', '# Make sure prepare_sequence from earlier in the LSTM section is loaded', '# 40多轮的结果得出的结果会比较好一点', 'for epoch in range(10):  # again, normally you would NOT do 300 epochs, it is toy data', '    for sentence, tags in tqdm(training_data):']
...
['    # 我们需要保存一下我们的运行结果, 以下代码意思是运行多少轮保存一次', '    if (epoch+1)%1==0:', "        file_name='model{}.pt'.format(epoch+1)", '        torch.save(model, file_name)', "        prepare_sequencerint('{ saved}'.format(file_name))"]
-------------------

